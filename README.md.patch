diff --git a/README.md b/README.md
index cc118ac..572dad1 100644
--- a/README.md
+++ b/README.md
@@ -1,84 +1,228 @@
 # üî¢ Conversor de N√∫meros em C
 
-Este projeto √© um programa desenvolvido em linguagem C que permite converter n√∫meros entre os seguintes sistemas num√©ricos:
+Um conversor interativo de bases num√©ricas desenvolvido em linguagem C, capaz de converter n√∫meros entre :
+ - **bin√°rio**: representa√ß√£o do sistema n√∫merico de m√°quinas
+ - **octal**: representa√ß√£o de 1 byte
+ - **decimal**: sistema padr√£o humano
+ - **hexadecimal**: representa√ß√£o de 2 bytes, ou a maior base n√∫merica m√∫ltipla de 8 (octal), menor do que 36 (10 + 26, ou o sistema decimal + o sistema alfab√©tico insens√≠vel a mai√∫sulos e min√∫sculos)
 
-- ‚úÖ **Hexadecimal para Bin√°rio**
-- ‚úÖ **Hexadecimal para Decimal**
-- ‚úÖ **Decimal para Bin√°rio**
-- ‚úÖ **Bin√°rio para Decimal**
+---
+
+## ‚ú® Funcionalidades
 
-O projeto foi criado com foco em praticar l√≥gica de programa√ß√£o, manipula√ß√£o de strings e convers√µes num√©ricas utilizando estruturas b√°sicas da linguagem C.
+- Convers√£o entre quaisquer bases: Bin√°rio, Octal, Decimal e Hexadecimal
+- Valida√ß√£o autom√°tica da entrada conforme a base escolhida
+- Interface interativa por menus no terminal (REPL) e comandos por argumentos (CLI)
+- Resultado destacado em verde (se o terminal suportar ANSI colors)
+- Suporte a UTF-8 para acentua√ß√£o e caracteres especiais nas mensagens. (locale = pt_br.UTF-8)
 
 ---
 
-## üß† Funcionalidades
+## üì∑ Demonstra√ß√µes - A
+
+
+### demo1 - jpg
+  ![](demo/demo1.jpg)
+
+### demo2 - jpg
+  ![](demo/demo2.jpg)
 
-1. **Convers√£o de Hexadecimal para Bin√°rio**  
-   Converte cada caractere hexadecimal para sua representa√ß√£o bin√°ria de 4 bits.
+### demo2 - gif
+  ![](demo/demo2.gif)
 
-2. **Convers√£o de Hexadecimal para Decimal**  
-   Converte a string hexadecimal para seu valor decimal correspondente.
+### demo3 - jpg
+  ![](demo/demo3.jpg)
 
-3. **Convers√£o de Decimal para Bin√°rio**  
-   Usa divis√µes sucessivas para calcular a representa√ß√£o bin√°ria.
+### demo3 - gif
+  ![](demo/demo3.gif)
 
-4. **Convers√£o de Bin√°rio para Decimal**  
-   Percorre a string bin√°ria e aplica a f√≥rmula de convers√£o para decimal.
+### demo4 - jpg
+  ![](demo/demo4.jpg)
+
+### demo4 - gif
+  ![](demo/demo4.gif)
 
 ---
 
-## üíª Como usar
+## üì∑ Demonstra√ß√µes - B-1
+
+### jpg
+
+#### demo1
+![](demo/demo1.jpg)
+
+#### demo2
+![](demo/demo2.jpg)
+
+#### demo3
+![](demo/demo3.jpg)
+
+#### demo4
+![](demo/demo4.jpg)
+
+### gif
+
+#### demo2
+![](demo/demo2.gif)
+
+#### demo3
+![](demo/demo3.gif)
+
+#### demo4
+![](demo/demo4.gif)
+
+---
+
+## üì∑ Demonstra√ß√µes - B-2
+
+### jpg
+
+- demo1
+![](demo/demo1.jpg)
+
+- demo2
+![](demo/demo2.jpg)
+
+- demo3
+![](demo/demo3.jpg)
+
+- demo4
+![](demo/demo4.jpg)
+
+### gif
+
+- demo2
+![](demo/demo2.gif)
+
+- demo3
+![](demo/demo3.gif)
+
+- demo4
+![](demo/demo4.gif)
+
+
+---
+
+## üöÄ Como Usar
 
 ### 1. Compila√ß√£o
 
-Certifique-se de ter um compilador C instalado, como o GCC (MinGW no Windows). Compile o programa com o comando:
+Certifique-se de ter um compilador C instalado (GCC, MinGW, Clang, etc).
+
+No **Linux/macOS**:
 
 ```bash
 gcc conversor.c -o conversor
-2. Execu√ß√£o
-bash
-Copiar
-Editar
+```
+
+No **Windows** (usando MinGW):
+
+```bash
+gcc conversor.c -o conversor.exe
+```
+
+### 2. Execu√ß√£o
+
+No **Linux/macOS**:
+
+```bash
 ./conversor
-O programa exibir√° um menu com as op√ß√µes de convers√£o. Basta escolher e seguir as instru√ß√µes na tela.
-
-üìã Exemplo de Uso
-sql
-Copiar
-Editar
---- Conversor de N√∫meros ---
-1 - Hexadecimal para Bin√°rio
-2 - Hexadecimal para Decimal
-3 - Decimal para Bin√°rio
-4 - Bin√°rio para Decimal
+./conversor --help
+./conversor <baseDeEntrada> <baseDeSaida> <entrada>
+```
+
+No **Windows**:
+
+```bash
+conversor.exe
+conversor.exe --help
+conversor.exe <baseDeEntrada> <baseDeSaida> <entrada>
+```
+
+---
+
+## üìã Exemplo de Uso
+
+### REPL (Read Evaluate Print Loop)
+
+```
+Escolha o sistema de base de entrada:
+
+1 - Bin√°rio
+2 - Octal
+3 - Decimal
+4 - Hexadecimal
+0 - Sair
+Op√ß√£o: 4
+
+Escolha o sistema de base de sa√≠da:
+
+1 - Bin√°rio
+2 - Octal
+3 - Decimal
+4 - Hexadecimal
 0 - Sair
-Escolha uma op√ß√£o: 1
-Digite o n√∫mero hexadecimal: 1A3F
-Resultado em bin√°rio: 0001101000111111
-üß™ Requisitos
-Compilador C (GCC / MinGW / Clang)
+Op√ß√£o: 1
+
+Digite o n√∫mero na base de entrada: 1A3F
+Resultado: 1101000111111
+```
+> O resultado ser√° exibido em verde, se o terminal suportar cores ANSI.
+
+### CLI (Command-Line Interface)
+
+```bash
+./conversor -h
+./conversor --help
+./conversor 1 3 101
+./conversor b d 101
+./conversor d b 6
+```
+
+---
 
-Terminal com suporte UTF-8 (ajust√°vel no VS Code ou PowerShell)
+## üß™ Requisitos
 
-üß† Aprendizados
-Durante o desenvolvimento, os integrantes da equipe praticaram:
+- Compilador C (GCC, MinGW, Clang, etc.)
+- Terminal com suporte a UTF-8
+- (Opcional) Suporte a cores ANSI para destaque do resultado
 
-Leitura e valida√ß√£o de strings
+---
+
+## üõ†Ô∏è Estrutura do Projeto
+
+- `demo/*` ‚Äî arquivos de demonstra√ß√£o
+- `conversor` ‚Äî bin√°rio para Linux (ELF x86-64)
+- `conversor.exe` ‚Äî bin√°rio para Windows (Portable x86-64)
+- `conversor.c` ‚Äî C√≥digo-fonte principal do conversor
+- `README.md` ‚Äî Este arquivo de documenta√ß√£o
+
+---
+
+## üß† Aprendizados
 
-Convers√µes entre bases num√©ricas
+Durante o desenvolvimento, a equipe praticou:
 
-Manipula√ß√£o de arrays e la√ßos
+- Leitura e valida√ß√£o de strings em C
+- Convers√£o entre diferentes bases num√©ricas
+- Manipula√ß√£o de arrays e la√ßos
+- Uso de `<locale.h>` para suporte a caracteres especiais
+- Boas pr√°ticas de programa√ß√£o estruturada em C
+- Detec√ß√£o e uso de cores ANSI no terminal
 
-Uso da biblioteca <locale.h> para suporte a caracteres especiais
+---
 
-Boas pr√°ticas de programa√ß√£o em C
+## üë• Equipe (ordem alfab√©tica)
 
-üë• Equipe
+- Ad√£o
+- Cair√© (https://github.com/cairef)
+- Gustavo Sanches
+- Jane
+- Lucas
 
-Lucas
+---
 
-Jane
+## üìÑ Licen√ßa
 
-Gustavo Sanches
+Este projeto √© de uso acad√™mico e livre para fins educacionais.
 
-Ad√£o
\ No newline at end of file
